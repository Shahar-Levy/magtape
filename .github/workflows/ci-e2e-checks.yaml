name: e2e-checks

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

# Jobs
jobs:
  # Job to lint code
  e2e-tests:
    runs-on: ubuntu-latest
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000
    strategy:
      matrix:
        k8s-version:
          - v1.19
          - v1.18
          - v1.17
          - v1.16
        include:
          - k8s-version: v1.19
            kind-node-image: kindest/node:v1.19.1@sha256:98cf5288864662e37115e362b23e4369c8c4a408f99cbc06e58ac30ddc721600
          - k8s-version: v1.18
            kind-node-image: kindest/node:v1.18.8@sha256:f4bcc97a0ad6e7abaf3f643d890add7efe6ee4ab90baeb374b4f41a4c95567eb
          - k8s-version: v1.17
            kind-node-image: kindest/node:v1.17.11@sha256:5240a7a2c34bf241afb54ac05669f8a46661912eab05705d660971eeb12f6555
          - k8s-version: v1.16
            kind-node-image: kindest/node:v1.16.15@sha256:a89c771f7de234e6547d43695c7ab047809ffc71a0c3b65aa54eda051c45ed20

    name: e2e-tests for K8s ${{ matrix.k8s-version }}

    steps:
    # why for checkout twice?
    #- uses: actions/checkout@v2

    - name: Check out the repo
      uses: actions/checkout@v2

    # Prepare is used to to collect information needed later in the action and expose it so it can be referenced
    # use this: GITHUB_ACTOR to set the "org" dynamically
    - name: Prepare
      id: prep
      run: |
        echo ${GITHUB_SHA::7}
        echo ::set-output name=version::sha-${GITHUB_SHA::7}
        echo ::set-output name=org::${GITHUB_ACTOR}
        
    # Part of docker/build-push-action@v2; setting up the build system
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
      with:
        driver-opts: network=host

    - name: Build magtape-init Container Image
      #if: github.repository == 'tmobile/magtape'
      timeout-minutes: 10
      uses: docker/build-push-action@v2
      with:
        context: ./app/magtape-init/
        # file should be specified relative to the repo root rather than relative to the context
        file: ./app/magtape-init/Dockerfile
        push: true
        #outputs: type=oci,dest=/tmp/magtape-init-${{ steps.prep.outputs.version }}.tar
        # Uses the version output exposed by the Prepare step to set the tag under v2
        tags: localhost:5000/${{ steps.prep.outputs.org }}/magtape-init:${{ steps.prep.outputs.version }}

    - name: Build magtape Container Image
      #if: github.repository == 'tmobile/magtape'
      timeout-minutes: 10
      uses: docker/build-push-action@v2
      with:
        context: ./app/magtape/
        # file should be specified relative to the repo root rather than relative to the context
        file: ./app/magtape/Dockerfile
        push: true
        #outputs: type=oci,dest=/tmp/magtape-${{ steps.prep.outputs.version }}.tar
        # Uses the version output exposed by the Prepare step to set the tag under v2
        tags: localhost:5000/${{ steps.prep.outputs.org }}/magtape:${{ steps.prep.outputs.version }}

    - name: Setup KinD Cluster
      timeout-minutes: 10
      uses: engineerd/setup-kind@v0.4.0
      with:
          version: "v0.9.0"
          image: ${{ matrix.kind-node-image }}

    - name: Install MagTape
      timeout-minutes: 10
      run: |
        echo "Loading MagTape images to KinD nodes"
        GIT_SHA=${{github.sha}}
        docker save -o /tmp/magtape-init-sha-${GIT_SHA::7}.tar localhost:5000/${GITHUB_ACTOR}/magtape-init:sha-${GIT_SHA::7}
        docker save -o /tmp/magtape-sha-${GIT_SHA::7}.tar localhost:5000/${GITHUB_ACTOR}/magtape:sha-${GIT_SHA::7}
        kind load docker-image /tmp/magtape-init-sha-${GIT_SHA::7}.tar
        kind load docker-image /tmp/magtape-sha-${GIT_SHA::7}.tar
        echo "Updating target image to use local ref"
        sed -i='' -E "s/(MAGTAPE_VERSION := )(.*$)/\1sha-${GIT_SHA::7}/" Makefile
        sed -i='' -E 's/(imagePullPolicy:) Always/\1 IfNotPresent/' deploy/manifests/magtape-deploy.yaml
        make set-release-version
        make build-single-manifest
        echo "Install MagTape"
        make install
        EXPECTED_REPLICAS=$(kubectl get deploy -n magtape-system magtape -o jsonpath='{.status.replicas}')
        READY_REPLICAS=$(kubectl get deploy -n magtape-system magtape -o jsonpath='{.status.readyReplicas}')
        while [ "${READY_REPLICAS}" != "${EXPECTED_REPLICAS}" ]; do
          READY_REPLICAS=$(kubectl get deploy -n magtape-system magtape -o jsonpath='{.status.readyReplicas}')
          echo "Replicas aren't all ready yet: ${READY_REPLICAS:=0}/${EXPECTED_REPLICAS}"
          sleep 2
        done

    - name: Configure Test Namespace
      timeout-minutes: 5
      run: |
        make ns-create-test

    - name: Install Tools 
      timeout-minutes: 5
      run: |
        sudo add-apt-repository ppa:rmescandon/yq
        sudo apt update
        sudo apt install yq -y

    - name: Execute Functional Tests
      timeout-minutes: 5
      run: |
        make test-functional
